// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  avatar      String?
  username    String?
  fcmToken String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  bio         String?
  lastSeen    DateTime     @default(now())
  isOnline    Boolean      @default(false)
  messages    Message[]
  chatMembers ChatMember[]
  chatReadStatus ChatReadStatus[]
}

model Chat {
  id        String   @id @default(uuid())
  name      String?
  ownerId   String?
  isGroup   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
  members  ChatMember[]
  readStatus ChatReadStatus[]
}

model ChatMember {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  role      Role     @default(MEMBER)
  joinedAt  DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, chatId])
}

model ChatReadStatus {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  chat        Chat     @relation(fields: [chatId], references: [id])
  chatId      String
  lastReadAt  DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, chatId])
}

enum Role {
  ADMIN
  MEMBER
}

model Message {
  id        String   @id @default(uuid())
  content   String
  type      String   @default("text")
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String
  seenBy    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([chatId])
}
